apply plugin: 'java-library'
apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'
apply from: '../javaUpload.gradle'

dependencies {
    api gradleApi()
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation "com.google.auto.factory:auto-factory:$autoFactory_version"
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation 'com.squareup.retrofit2:retrofit:2.1.0'
    implementation "com.likethesalad.tools:string-android-resource-locator:1.0.0-SNAPSHOT"
    compileOnly "com.android.tools.build:gradle:$androidBuild_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.auto.factory:auto-factory:$autoFactory_version"
    annotationProcessor "com.google.auto.factory:auto-factory:$autoFactory_version"
    testImplementation gradleTestKit()
    testImplementation "com.android.tools.build:gradle:$androidBuild_version"
    testImplementation "io.mockk:mockk:1.9.3"
    testImplementation 'com.google.truth:truth:1.0'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
}

kapt {
    correctErrorTypes = true
}

sourceSets {
    functionalTest {
        java {
            srcDir file('src/functionalTest/java')
        }
        resources {
            srcDir file('src/functionalTest/resources')
        }
        compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
        runtimeClasspath += output + compileClasspath
    }
}

task functionalTest(type: Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}